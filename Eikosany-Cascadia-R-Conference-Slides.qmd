---
title: "Eikosany: Microtonal Algorithmic Composition with R"
author: "M. Edward (Ed) Borasky"
date: "2023-08-19"
bibliography: REFERENCES.bib
format: revealjs
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

```

# 1 Algorithmic Composition

## Overview of Methods [@nierhaus2009algorithmic]

-   Markov Models / Stochastic
-   Generative Grammars
-   Transition Networks
-   Chaos and Self-Similarity
-   Genetic Algorithms
-   Cellular Automata
-   Artificial Neural Networks

## My Main Focus

-   Markov Models / Stochastic
    -   Pioneered by Iannis Xenakis [@xenakis1992formalized]
    -   [for example, @Borasky2021a - random walks on chord matrix]

# 2 Musical Scales

## Types of scales

-   Standard "western" tuning - 12 equally-spaced tones / octave
    -   abbreviated 12-TET or 12-EDO
-   Alternative tuning - anything else

## Alternative scales
-   scales from other cultures
-   "just" scales - scales based on rational numbers
-   scale periods different from the octave
-   scale period divided into more than 12 tones
-   combinations of the above!

## Microtonal music

-   Usually defined as an octave divided into more than 12 tones
-   Common microtonal scales
    -   19-TET
    -   24-TET aka quarter tones
    -   31-TET

# 3 Erv Wilson [@narushima2019microtonality]

## Ervin Wilson (June 11, 1928 â€“ December 8, 2016)
- Mexican/American (dual citizen)
- Prolific music theorist
- Developed keyboard layouts, scales and lattices
- Primarily known for just microtonal scales

## Combination Product Sets
- Focus of the `eikosany` package
- Start with a set of _harmonic factors_
- Take all the combinations of the factors with `N` elements
- Take the products of the combinations
- Reduce the products to ratios in [1, 2) - multiply or divide by
powers of two
- Sort

## Example: 1 3 5 7 Hexany
- Combination products: `1*3, 1*5, 1*7, 3*5, 3*7, 5*7`
- Raw ratios (divide by smallest product): `1 5/3 7/3 5 7 35/3`
- Reduce: `1 5/3 7/6 5/4 7/4 35/24`
- Sort: `1 7/6 5/4 35/24 5/3 7/4`

## Using the package!
```{r}
hexany <- eikosany::cps_scale_table(
  harmonics = c(1, 3, 5, 7),
  choose = 2
)
print(knitr::kable(hexany))

```

## The 1 3 5 7 9 11 Eikosany
```{r}
# it's the default!
print(knitr::kable(eikosany::cps_scale_table()))

```

# 4 Workflow

## Basic Workflow
1. Pick scale - most common are hexanies, dekanies and eikosonaies
2. Generate scale table

# 5 Roadmap

## Current status
- Enough infrastructure to manually make music!
    - (which was my initial goal)
- Documentation - you're looking at it

## Current plan
1. Clean up documentation and do a first release (August)
    - Hoping to release an album / EP on Bandcamp
2. Open feature requests for triage
3. Move forward with different project in September
    - [CLAMS](https://github.com/AlgoCompSynth/CLAMS) - Forth-based microcontroller synthesizer
    - CLAMS will use Quarto for "literate programming"
    - Probably VSCode - seems to be the best polyglot Quarto tool


# Appendix - Microtonal Music Resources

## PC / Mac Software

## Websites

# References
